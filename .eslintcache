[{"/home/jack/Desktop/doc/jack-react-redux-induction/src/index.tsx":"1","/home/jack/Desktop/doc/jack-react-redux-induction/src/serviceWorker.ts":"2","/home/jack/Desktop/doc/jack-react-redux-induction/src/components/RatesTable.tsx":"3","/home/jack/Desktop/doc/jack-react-redux-induction/src/utils/dateUtils.ts":"4","/home/jack/Desktop/doc/jack-react-redux-induction/src/utils/stringUtils.ts":"5","/home/jack/Desktop/doc/jack-react-redux-induction/src/redux/store.ts":"6","/home/jack/Desktop/doc/jack-react-redux-induction/src/redux/actions.tsx":"7","/home/jack/Desktop/doc/jack-react-redux-induction/src/redux/saga.js":"8","/home/jack/Desktop/doc/jack-react-redux-induction/src/redux/states.tsx":"9","/home/jack/Desktop/doc/jack-react-redux-induction/src/redux/reducer.tsx":"10","/home/jack/Desktop/doc/jack-react-redux-induction/src/App.tsx":"11","/home/jack/Desktop/doc/jack-react-redux-induction/src/pages/ShowAllRates.tsx":"12","/home/jack/Desktop/doc/jack-react-redux-induction/src/pages/CompareRates.tsx":"13","/home/jack/Desktop/doc/jack-react-redux-induction/src/pages/NotFound.tsx":"14","/home/jack/Desktop/doc/jack-react-redux-induction/src/components/Selection.tsx":"15","/home/jack/Desktop/doc/jack-react-redux-induction/src/components/DatePicker.tsx":"16","/home/jack/Desktop/doc/jack-react-redux-induction/src/components/HeaderText.tsx":"17"},{"size":652,"mtime":1613370082060,"results":"18","hashOfConfig":"19"},{"size":5424,"mtime":1611890508340,"results":"20","hashOfConfig":"19"},{"size":1634,"mtime":1613966393454,"results":"21","hashOfConfig":"19"},{"size":766,"mtime":1613372541563,"results":"22","hashOfConfig":"19"},{"size":172,"mtime":1613371659148,"results":"23","hashOfConfig":"19"},{"size":648,"mtime":1613964740220,"results":"24","hashOfConfig":"19"},{"size":2438,"mtime":1613374850873,"results":"25","hashOfConfig":"19"},{"size":4468,"mtime":1613375872385,"results":"26","hashOfConfig":"19"},{"size":854,"mtime":1613372665052,"results":"27","hashOfConfig":"19"},{"size":1730,"mtime":1613374491748,"results":"28","hashOfConfig":"19"},{"size":4395,"mtime":1613374555960,"results":"29","hashOfConfig":"19"},{"size":5614,"mtime":1613377261952,"results":"30","hashOfConfig":"19"},{"size":8518,"mtime":1614022741530,"results":"31","hashOfConfig":"19"},{"size":596,"mtime":1613372527444,"results":"32","hashOfConfig":"19"},{"size":1103,"mtime":1613962076685,"results":"33","hashOfConfig":"19"},{"size":920,"mtime":1613961467582,"results":"34","hashOfConfig":"19"},{"size":229,"mtime":1613961469878,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"n4t240",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/jack/Desktop/doc/jack-react-redux-induction/src/index.tsx",[],["75","76"],"/home/jack/Desktop/doc/jack-react-redux-induction/src/serviceWorker.ts",[],"/home/jack/Desktop/doc/jack-react-redux-induction/src/components/RatesTable.tsx",[],"/home/jack/Desktop/doc/jack-react-redux-induction/src/utils/dateUtils.ts",[],["77","78"],"/home/jack/Desktop/doc/jack-react-redux-induction/src/utils/stringUtils.ts",[],"/home/jack/Desktop/doc/jack-react-redux-induction/src/redux/store.ts",[],"/home/jack/Desktop/doc/jack-react-redux-induction/src/redux/actions.tsx",[],"/home/jack/Desktop/doc/jack-react-redux-induction/src/redux/saga.js",[],["79","80"],"/home/jack/Desktop/doc/jack-react-redux-induction/src/redux/states.tsx",[],"/home/jack/Desktop/doc/jack-react-redux-induction/src/redux/reducer.tsx",[],"/home/jack/Desktop/doc/jack-react-redux-induction/src/App.tsx",["81","82","83"],"/************************************************************************************************\r\n * This is my project for react induction, refer to confluence ticket ---\r\n * https://ezyvet.atlassian.net/wiki/spaces/DEV/pages/888209690/React+Dev+Onboarding\r\n *\r\n *\r\n * Highlights:\r\n * 1. React + Redux\r\n * 2. Two pages routing\r\n * 3. Data from : api.exchangeratesapi.io\r\n * 4. Saga mid layer handle all api calls\r\n *\r\n * Author: Jack Wang\r\n * Since: 15 Feb 2021\r\n *\r\n *\r\n *\r\n * ***********************************************************************************************\r\n */\r\nimport React, {useEffect} from 'react';\r\nimport {createStyles, makeStyles} from \"@material-ui/styles\";\r\nimport {useDispatch} from 'react-redux'\r\nimport {\r\n    GET_CURRENCIES_IN_FULL_NAME_SUCCESS,\r\n    GET_COMPARED_RATES_SUCCESS,\r\n    GET_UPDATED_RATES_SUCCESS\r\n} from \"./redux/actions\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport {Switch, Route, BrowserRouter, Link} from \"react-router-dom\";\r\nimport {AppBar} from \"@material-ui/core\";\r\n\r\nimport ShowAllRates from \"./pages/ShowAllRates\";\r\nimport CompareRates from \"./pages/CompareRates\";\r\nimport NotFound from \"./pages/NotFound\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n\r\n    createStyles({\r\n        container: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n        },\r\n\r\n        selectors: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n        }\r\n    }));\r\n\r\nfunction App() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /**\r\n     * Dispatch the action when the project is on loading. Sage will listen to action type : GET_CURRENCIES_IN_FULL_NAME_SUCCESS,\r\n     * and then make api call to get the full currencies names.\r\n     */\r\n    const getCurrencyFullName = () => dispatch({type: GET_CURRENCIES_IN_FULL_NAME_SUCCESS});\r\n    useEffect((() => {\r\n        getCurrencyFullName();\r\n    }), [])\r\n\r\n    /**\r\n     * Dispatch the action when the project is on loading. Sage will listen to action type : GET_INITIAL_RATES_SUCCESS,\r\n     * and then make api call to get the initial value object for ShowAll page.\r\n     */\r\n    const getInitialRates = () => dispatch({type: GET_UPDATED_RATES_SUCCESS});\r\n    useEffect((() => {\r\n        getInitialRates();\r\n    }), [])\r\n\r\n\r\n    /**\r\n     * Dispatch the action when the project is on loading. Sage will listen to action type : GET_COMPARED_RATES_SUCCESS,\r\n     * and then make api call to get the initial value object for CompareRates page.\r\n     */\r\n    const getInitialComparedRates = () => dispatch({type: GET_COMPARED_RATES_SUCCESS});\r\n    useEffect((() => {\r\n        getInitialComparedRates();\r\n    }), [])\r\n\r\n\r\n    //List of routers\r\n    const routers = ['/showall', '/compare'];\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <BrowserRouter>\r\n                <Route path='/'\r\n                render={(history)=>(\r\n                    <AppBar position=\"static\">\r\n                        <Tabs value={history.location.pathname !== '/'? history.location.pathname : false}>\r\n                            <Tab label=\"SHOW ALL\"\r\n                                 value={routers[0]}\r\n                                 component={Link}\r\n                                 to={routers[0]}/>\r\n                            <Tab\r\n                                label=\"COMPARE TWO CURRENCIES\"\r\n                                value={routers[1]}\r\n                                component={Link}\r\n                                to={routers[1]}/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                )}>\r\n\r\n                </Route>\r\n                <Switch>\r\n                    {/*use exact path to avoid partial match.*/}\r\n                    {/*    e.g -> /showall/jack is not allowed here*/}\r\n                    <Route exact path='/showall' component={ShowAllRates}/>\r\n                    <Route exact path='/compare' component={CompareRates}/>\r\n                    <Route exact path='/' component={ShowAllRates}/>\r\n\r\n                    {/*if the path does not match, redirected to NOT Found page*/}\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","/home/jack/Desktop/doc/jack-react-redux-induction/src/pages/ShowAllRates.tsx",[],"/home/jack/Desktop/doc/jack-react-redux-induction/src/pages/CompareRates.tsx",["84","85"],"import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport HeaderText from \"../components/HeaderText\";\nimport Selection from \"../components/Selection\";\nimport RatesTable from \"../components/RatesTable\";\nimport {\n    getComparedCurrencyRates,\n    updateComparedPageComparedCurrency,\n    updateComparedPageBaseCurrency,\n    updateOrder\n} from \"../redux/actions\";\nimport {convertToThreeDecimals} from \"../utils/stringUtils\";\nimport { compareCurrencyAndValue, compareData, compareDataItem} from \"../utils/types\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        compareRatesContainer: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            marginTop: '10vh'\n        },\n\n        selectors: {\n            display: 'flex',\n            flexDirection: 'row',\n        },\n\n        orderSelector: {\n\n            marginBottom: '3rem',\n            alignSelf: 'flex-start'\n        },\n\n        midText: {\n            fontSize: 22,\n            marginLeft: theme.spacing(3),\n            marginRight: theme.spacing(3),\n        }\n    }));\n\nconst CompareRates = () => {\n\n    const classes = useStyles();\n\n    //Fetch state from store\n    const currenciesInFullName = useSelector((state:any) => state.displayedCurrenciesInFullName);\n    const currenciesInShortName = useSelector((state:any) => state.displayedCurrencies);\n    const baseCurrency = useSelector((state:any) => state.baseCurrency);\n    const comparedCurrency = useSelector((state:any) => state.comparedCurrency);\n    const orders = useSelector((state:any) => state.orders);\n    const comparedTableData = useSelector((state:any) => state.comparedTableData);\n    const order = useSelector((state:any) => state.order);\n\n\n    const dispatch = useDispatch();\n\n\n    //send actions\n    const updateBaseCurrency = (event: React.ChangeEvent<HTMLInputElement>) => dispatch(updateComparedPageBaseCurrency(event.target.value));\n    const updateComparedTableRates = () => dispatch(getComparedCurrencyRates());\n    //BaseCurrency onChange handler\n    const baseCurrencySelectionOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateBaseCurrency(event);\n        updateComparedTableRates();\n    }\n\n    //send actions\n    const updateComparedCurrency = (event: React.ChangeEvent<HTMLInputElement>) => dispatch(updateComparedPageComparedCurrency(event.target.value));\n    //CompareCurrency onChange handler\n    const comparedCurrencySelectionOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateComparedCurrency(event);\n        updateComparedTableRates();\n    }\n\n    //send actions\n    const updateOrderValue = (event: React.ChangeEvent<HTMLInputElement>) => dispatch(updateOrder(event.target.value));\n    //order selection onChange handler\n    const orderSelectionOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateOrderValue(event);\n    }\n\n\n    const baseSelectionOptions = currenciesInShortName\n        .map((ele: string) => (\n                <MenuItem value={ele}>\n                    {Object.keys(currenciesInFullName).map(key => {\n                        if (key === ele) {\n                            return currenciesInFullName[ele];\n                        }\n                        return null;\n                    })\n                    }\n                </MenuItem>\n            )\n        )\n\n    const comparedSelectionOptions = currenciesInShortName\n        .map((ele: string) => (\n                <MenuItem value={ele}>\n                    {Object.keys(currenciesInFullName).map(key => {\n                        if (key === ele) {\n                            return currenciesInFullName[ele];\n                        }\n                        return null;\n                    })\n                    }\n                </MenuItem>\n            )\n        )\n\n    const orderSelectionOptions = orders\n        .map((ele: string) => (\n                <MenuItem value={ele}>\n                    {ele}\n                </MenuItem>\n            )\n        )\n\n\n    const StyledTableCell = withStyles((theme: Theme) =>\n        createStyles({\n            head: {\n                backgroundColor: theme.palette.primary.dark,\n                color: theme.palette.common.white,\n            },\n            body: {\n                fontSize: 14,\n            },\n        }),\n    )(TableCell);\n\n    const StyledTableRow = withStyles((theme: Theme) =>\n        createStyles({\n            root: {\n                '&:nth-of-type(odd)': {\n                    backgroundColor: theme.palette.action.hover,\n                },\n            },\n        }),\n    )(TableRow);\n\n    /**\n     * Functions to sort the object order by the currency rate in descending.\n     * Then return the new sorted object.\n     *\n     * @param object\n     */\n    const descendingOrder = (object:object) => {\n        return Object.entries(comparedTableData as compareData)\n            .sort((a:compareDataItem , b:compareDataItem) =>\n                (Object.values(b[1]) as unknown as number)\n                - (Object.values(a[1]) as unknown as number))\n    }\n\n    /**\n     * Functions to sort the object order by the currency rate in ascending.\n     * Then return the new sorted object.\n     *\n     * @param object\n     */\n    const ascendingOrder = (object:object) => {\n        return (Object.entries(comparedTableData as compareData))\n            .sort((a:compareDataItem , b:compareDataItem) =>\n                (Object.values(a[1]) as unknown as number)\n                - (Object.values(b[1]) as unknown as number))\n    }\n\n    let sortedTableData: Object[] = [];\n\n    if (order === 'ascending') {\n        sortedTableData = ascendingOrder(comparedTableData)\n    } else {\n        sortedTableData = descendingOrder(comparedTableData)\n    }\n\nconsole.log(sortedTableData);\n\n    let result : object[]= []\n    const createTableBody = () => {\n        sortedTableData.map((ele:object) => {\n            console.log(ele);\n\n            result.push(\n                    <StyledTableRow>\n                        <StyledTableCell\n                            // @ts-ignore\n                            align=\"left\">{ele[0]}</StyledTableCell>\n                        <StyledTableCell\n                            align=\"left\">\n                            {\n                                // @ts-ignore\n                                Object.entries(ele[1] ).map((v) => {\n\n                                        return (v[0] )+ ' ' + convertToThreeDecimals(v[1] as number)\n                                    }\n                                )}\n                        </StyledTableCell>\n                    </StyledTableRow>)\n            }\n        )\n        return result;\n    }\n\n\n    return (\n        <div className={classes.compareRatesContainer}>\n            <HeaderText headerText=\"Exchange Rates Over Time\"/>\n            <div><Grid container>\n                <Grid className={classes.selectors}>\n                    <Selection\n                        id=\"baseCurrency\"\n                        selectionValue={baseCurrency}\n                        onChange={baseCurrencySelectionOnChange}\n                        selectionOptions={baseSelectionOptions}\n                    />\n                    <p className={classes.midText}>To</p>\n                    <Selection\n                        id=\"compareCurrency\"\n                        selectionValue={comparedCurrency}\n                        onChange={comparedCurrencySelectionOnChange}\n                        selectionOptions={comparedSelectionOptions}\n                    />\n                </Grid>\n            </Grid>\n            </div>\n            <div className={classes.orderSelector}>\n                <Selection\n                    id=\"orders\"\n                    labelText=\"Order Date\"\n                    selectionValue={order}\n                    selectionOptions={orderSelectionOptions}\n                    onChange={orderSelectionOnChange}\n                />\n            </div>\n\n\n            <RatesTable\n                columnId={1}\n                createBody={createTableBody()}/>\n            <br/>\n            <br/>\n            <br/>\n        </div>\n    )\n}\n\nexport default CompareRates;","/home/jack/Desktop/doc/jack-react-redux-induction/src/pages/NotFound.tsx",[],"/home/jack/Desktop/doc/jack-react-redux-induction/src/components/Selection.tsx",[],"/home/jack/Desktop/doc/jack-react-redux-induction/src/components/DatePicker.tsx",[],"/home/jack/Desktop/doc/jack-react-redux-induction/src/components/HeaderText.tsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"92","severity":1,"message":"93","line":66,"column":9,"nodeType":"94","endLine":66,"endColumn":11,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":75,"column":9,"nodeType":"94","endLine":75,"endColumn":11,"suggestions":"97"},{"ruleId":"92","severity":1,"message":"98","line":85,"column":9,"nodeType":"94","endLine":85,"endColumn":11,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":19,"column":10,"nodeType":"102","messageId":"103","endLine":19,"endColumn":33},{"ruleId":"104","severity":1,"message":"105","line":188,"column":42,"nodeType":"106","messageId":"107","endLine":188,"endColumn":44},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrencyFullName'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has a missing dependency: 'getInitialRates'. Either include it or remove the dependency array.",["111"],"React Hook useEffect has a missing dependency: 'getInitialComparedRates'. Either include it or remove the dependency array.",["112"],"@typescript-eslint/no-unused-vars","'compareCurrencyAndValue' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [getCurrencyFullName]",{"range":"119","text":"120"},"Update the dependencies array to be: [getInitialRates]",{"range":"121","text":"122"},"Update the dependencies array to be: [getInitialComparedRates]",{"range":"123","text":"124"},[2035,2037],"[getCurrencyFullName]",[2402,2404],"[getInitialRates]",[2794,2796],"[getInitialComparedRates]"]